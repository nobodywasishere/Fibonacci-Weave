#!/usr/bin/env python

import os, sys
import numpy as np
from PIL import Image, ImageOps

# Get divisor parameter from command line
if (len(sys.argv) < 2):
    divisor = 198
else:
    try:
        divisor = int(sys.argv[1])
    except:
        print("Error: not a number")
        print("fibweave [divisor: 198] [scale factor: 2] [image width: 968] "
        "[image height: 792]")
        sys.exit(1)

# Get scale parameter from command line
if (len(sys.argv) < 3):
    im_scale = 2
else:
    im_scale = int(sys.argv[2])

# Get Image size from command line
if (len(sys.argv) < 5):
    im_length = 792
    im_width = 968
else:
    im_length = int(sys.argv[4])
    im_width = int(sys.argv[3])

# Set array size based on scale and image size
length = int(im_length/im_scale)
width = int(im_width/im_scale)

# Allocate array
fibweave = [[0 for x in range(width)] for y in range(length)]

# Set initial parameters where 1st col counts up from 0 and second column is 1's
for i in range(length):
    fibweave[i][1] = 1
    if (i != 0): fibweave[i][0] = (fibweave[i - 1][0] + 1) % divisor

# Generate each element in array using Fibonnaci and modulus
for i in range(length):
    for j in range(2, width):
        fibweave[i][j] = (fibweave[i][j - 1] + fibweave[i][j - 2]) % divisor

# Get the repetition
length_rp = length
width_rp = -1

for j in range(2, width-2):
    if (fibweave[0][j:j+3] ==  [divisor-1, 1, 0]):
        width_rp = j + 3
        break

if (width_rp == -1):
    print("Not wide enough to find repeat")
else:
    print("Horizontally repeats at " + str(width_rp))

# Scale each pixel due to color needing to be between 0 and 255
color_scale = 256 / divisor
for i in range(length):
    for j in range(2, width):
        fibweave[i][j] = fibweave[i][j] * color_scale

# Generate image from array
im = Image.fromarray(np.asarray(fibweave).astype('uint8'))
im = ImageOps.colorize(im, black="blue", white="orange", mid="white")
im = im.resize((im_width, im_length),resample=Image.NEAREST)
im.save("im.png")
